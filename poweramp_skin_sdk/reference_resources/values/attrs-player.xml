<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2010-2025 Maksim Petrov

Redistribution and use in source and binary forms, with or without
modification, are permitted for themes, skins, widgets, plugins, applications and other software
which communicate with Poweramp music player application on Android platform.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!-- Poweramp UI specific attributes (i.e. for com.maxmpz.widget.player.* packages). See also attrs-theme.xml -->

<resources>
	<!-- Player buttons -->
	<attr name="prev_cat_round" format="reference"/>
	<attr name="rw_round" format="reference"/>
	<attr name="ff_round" format="reference"/>
	<attr name="next_cat_round" format="reference"/>
	<attr name="pause_round" format="reference"/>
	<attr name="play_round" format="reference"/>
	<attr name="pause_small_narrow" format="reference"/>
	<attr name="back_10s_round" format="reference"/>
	<attr name="forward_10s_round" format="reference"/>

	<!-- Player core button icons - currently used just for Android 12. Arrow-like icons rotated for the reverse action,
	     so there are no rw/prev_cat icons -->
	<attr name="pause_core" format="reference"/>
	<attr name="play_core" format="reference"/>
	<attr name="ff_core" format="reference"/>
	<attr name="next_cat_core" format="reference"/>
	<attr name="forward_10s_core" format="reference"/>
	<attr name="back_10s_core" format="reference"/>

	<!-- The main screen play button drawable. This differs for Android 12+ where it also includes play_core -->
	<attr name="main_play" format="reference"/>
	<!-- The main screen pause button drawable (big round, for Pro Buttons options. See pause_small_narrow for small rectangle pause).
	     This differs for Android 12+ where it also includes play_core -->
	<attr name="main_pro_pause" format="reference"/>
	<!-- The main screen >> button drawable. This differs for Android 12+ where it also includes ff_core -->
	<attr name="main_ff" format="reference"/>
	<!-- The main screen << button drawable. This differs for Android 12+ where it also includes ff_core (rotated 180 degrees) -->
	<attr name="main_rw" format="reference"/>
	<!-- The main screen >>> button drawable. This differs for Android 12+ where it also includes next_cat_core -->
	<attr name="main_prev_cat" format="reference"/>
	<!-- The main screen <<< button drawable. This differs for Android 12+ where it also includes next_cat_core (rotated 180 degrees) -->
	<attr name="main_next_cat" format="reference"/>
	<!-- The main screen +10s button drawable. This differs for Android 12+ where it also includes forward_10s_core -->
	<attr name="main_forward_10s" format="reference"/>
	<!-- The main screen -10s button drawable. This differs for Android 12+ where it also includes back_10s_core -->
	<attr name="main_back_10s" format="reference"/>


	<!-- Navbar icons -->
	<attr name="nav_lists" format="reference"/>
	<attr name="nav_equ" format="reference"/>
	<attr name="nav_search" format="reference"/>
	<attr name="nav_hamburger" format="reference"/>
	
	<!-- Eq nav icons -->
	<attr name="eq_equalizer" format="reference"/>
	<attr name="eq_vol" format="reference"/>
	<attr name="eq_reverb" format="reference"/>
		
	<attr name="miniplayer_play_pause" format="reference"/>
	<attr name="sleep_timer_32dp" format="reference"/><!-- sub aa -->

	<!-- Small equalizer preset icons when assigned to output -->
	<attr name="pre_speaker" format="reference"/>
	<attr name="pre_wired" format="reference"/>
	<attr name="pre_bt" format="reference"/>
	<attr name="pre_song" format="reference"/>
	<attr name="pre_usb" format="reference"/>
	<attr name="pre_chromecast" format="reference"/>
	<attr name="pre_other" format="reference"/>

	<attr name="equ_graphic_small" format="reference"/>
	<attr name="equ_parametric_small" format="reference"/>

	<!-- Points to array of drawables, array sorting order is important -->
	<attr name="vis_icons_32dp" format="reference"/>
	
	<attr name="repeat_none_32dp" format="reference"/>
	<attr name="repeat_32dp" format="reference"/>
	<attr name="repeat_advance_32dp" format="reference"/>
	<attr name="repeat_advance_stop_32dp" format="reference"/>
	<attr name="repeat_song_32dp" format="reference"/>
	<attr name="single_song_32dp" format="reference"/>
	
	<attr name="shuffle_none_32dp"/>
	<attr name="shuffle_all_32dp"/>
	<attr name="shuffle_songs_32dp"/>
	<attr name="shuffle_cats_32dp"/>
	<attr name="shuffle_songs_and_cats_32dp"/>

	<attr name="vis_none_32dp"/>
	<attr name="vis_w_ui_32dp"/>
	<attr name="vis_32dp"/>
	
	<attr name="vis_lock_24dp"/>
	<attr name="vis_advance_24dp"/>
	<attr name="vis_advance_by_time_24dp"/>
	<attr name="vis_shuffle_24dp"/>

	<!-- These should be tinted the same way shuffle/vis/repeat icons are -->
	<attr name="like_no_rating_24dp"/>
	<attr name="like_24dp"/>
	<attr name="unlike_24dp"/>

	<attr name="love_no_rating_24dp"/>
	<attr name="love_24dp"/>
	<attr name="unlove_24dp"/>

	<attr name="reverb_24dp" format="reference"/>
	<attr name="vis_24dp" format="reference"/>
	<attr name="waveseek_bar" format="reference"/>
	<attr name="waveseek_elapsedbar" format="reference"/>

	<!-- Menu items -->
	<attr name="rescan" format="reference"/>
	<attr name="list_options" format="reference"/>

	<attr name="add_to_pl" format="reference"/>
	<attr name="add_to_pl_in_pl" format="reference"/>
	<attr name="add_to_pl_at_start" format="reference"/>
	<attr name="add_to_pl_shuffled" format="reference"/>

	<attr name="pl_one_24dp" format="reference"/>
	<attr name="pl_add_24dp" format="reference"/>
	<attr name="pl_toggle_24dp" format="reference"/>

	<attr name="info" format="reference"/>
	<attr name="audio_info_24dp" format="reference"/>
	<attr name="send" format="reference"/>
	<attr name="enqueue" format="reference"/>
	<attr name="enqueue_shuffled" format="reference"/>
	<attr name="add_next" format="reference"/>
	<attr name="add_next_shuffled" format="reference"/>
	<attr name="lyrics" format="reference"/>
	<attr name="lyrics_none_24dp" format="reference"/>
	<attr name="album_art" format="reference"/>
	<attr name="delete" format="reference"/>
	<attr name="resort" format="reference"/>
	<attr name="delete_dups" format="reference"/>
	<attr name="clear_q" format="reference"/>
	<attr name="clear" format="reference"/>
	<attr name="redo" format="reference"/>
	<attr name="export" format="reference"/>
	<attr name="import_24dp" format="reference"/>
	<attr name="bookmark" format="reference"/>
	<attr name="share_24dp" format="reference"/>
	<attr name="reset_24dp" format="reference"/>
	<attr name="save_24dp" format="reference"/>
	<attr name="save_assign_24dp" format="reference"/>
	<attr name="autosave_24dp" format="reference"/>

	<attr name="clear_q_24dp" format="reference"/>
	<attr name="artists_24dp" format="reference"/>
	<attr name="genres_24dp" format="reference"/>
	<attr name="albums_24dp" format="reference"/>
	<attr name="folders_24dp" format="reference"/>
	<attr name="folder_24dp" format="reference"/>
	<attr name="rename_24dp" format="reference"/>
	<attr name="delete_24dp" format="reference"/>
	<attr name="assign_eq_24dp" format="reference"/>
	<attr name="playlist_24dp" format="reference"/>
	<attr name="play_24dp" format="reference"/>
	<attr name="search_24dp" format="reference"/>
	<!-- The tinted version - used in the toast -->
	<attr name="lock_24dp_tinted" format="reference"/>
	<attr name="lock_24dp" format="reference"/>
	<attr name="lock_solid_24dp" format="reference"/>
	<attr name="lock_unlock_24dp" format="reference"/>
	<attr name="close_24dp" format="reference"/>
	<attr name="add_to_launcher_24dp" format="reference"/>

	<!-- This may visually match settings_24dp, but may also have a higher resolution for xhdpi-large.
	     settings_24dp should not grow over 24dp as it used with implicit size in many places -->
	<attr name="settings_navbar" format="reference"/>
	<attr name="settings_24dp" format="reference"/>
	<attr name="settings_32dp" format="reference"/>
	<attr name="settings_alt_24dp" format="reference"/><!-- E.g. settings_stroke_24dp -->
	<attr name="changelog_24dp" format="reference"/>
	<attr name="support_24dp" format="reference"/>
	
	<attr name="sort_type_24dp" format="reference"/>
	<attr name="sort_24dp" format="reference"/>
	<attr name="sort_author_24dp" format="reference"/>
	<attr name="sort_source_24dp" format="reference"/>
	<attr name="sort_rating_24dp" format="reference"/>
	<attr name="sort_added_24dp" format="reference"/>
	<attr name="sort_modified_24dp" format="reference"/>
	<attr name="sort_num_tracks_24dp" format="reference"/>
	<attr name="shuffle_24dp" format="reference"/>
	<attr name="stream_24dp" format="reference"/><!-- This one should be preferable rendered for at least xxx and xx hdpi densities for best scaling -->

	<attr name="insert_top_24dp" format="reference"/>
	<attr name="insert_bottom_24dp" format="reference"/>
	<attr name="insert_shuffle_24dp" format="reference"/>
	
	<attr name="l_plus_r_ch_24dp" format="reference"/>
	<attr name="l_ch_24dp" format="reference"/>
	<attr name="r_ch_24dp" format="reference"/>
	
	<attr name="low_pass_24dp" format="reference"/>
	<attr name="high_pass_24dp" format="reference"/>
	<attr name="band_pass_24dp" format="reference"/>
	<attr name="peaking_band_24dp" format="reference"/>
	<attr name="lsf_24dp" format="reference"/>
	<attr name="hsf_24dp" format="reference"/>
	
	<attr name="meta_next_12dp" format="reference"/>
	<attr name="meta_songs_12dp" format="reference"/>
	<attr name="meta_songs_w_lyrics_12dp" format="reference"/>
	
	<attr name="list_drag_24dp" format="reference"/>
	<attr name="list_drag_hor_24dp" format="reference"/>
	<attr name="grid_drag_24dp" format="reference"/>

	<attr name="edit_stroke_24dp" format="reference"/>
	<attr name="edit_tags_24dp" format="reference"/>


	<attr name="defaultLowResAA" format="reference"/><!-- Default AA image. Strictly 512x512 bitmap -->
	<attr name="defaultHiResAA" format="reference"/><!-- Default AA image. Strictly 1024x1024 bitmap -->
	
	<!-- Not themeable functional attributes -->
	<attr name="state_playing" format="boolean" /><!-- Extra state for drawables -->
	<attr name="state_locked" format="boolean" /><!-- Extra state for drawables -->

	<attr name="milk_advance_modes" format="reference"/>
	<attr name="milk_advance_icons" format="reference"/>
	<attr name="milk_advance_enum" format="reference"/>
	<attr name="settings_target_audio" format="string"/>
	<attr name="settings_target_equ" format="string"/>
	
	<attr name="logo_navbar" format="reference"/>
	
	<attr name="EqLockLabelStyle" format="reference"/>

	<!-- Backgrounds to use for alt/alt2. Can be further manipulated, e.g. by overlap_track_labels_no_bg -->
	<attr name="alt_title_bg" format="color|reference"/>
	<attr name="alt_ratingbar_bg" format="color|reference"/>
	<attr name="alt_menu_bg" format="color|reference"/>
	<attr name="alt_sub_aa_button_bg" format="color|reference"/>
	<attr name="meta_info_bg" format="color|reference"/>

	<!-- Round checkbox used for playlist selection -->
	<attr name="round_check" format="reference"/>
	<!-- "Plus" checkbox used for playlist selection -->
	<attr name="plus_check" format="reference"/>

	<attr name="lock_unlock_24dp_selector" format="reference"/>

	<!-- NOTE: drawables for sub-aa buttons SHOULD have explicit tinting specified for them as we don't apply any external tint for them -->
	<!-- Like selector used for sub-aa buttons -->
	<attr name="like_selector_subaa" format="reference"/>
	<!-- Like selector used for sub-aa buttons -->
	<attr name="unlike_selector_subaa" format="reference"/>
	<!-- Heart selector used for sub-aa buttons -->
	<attr name="love_selector_subaa" format="reference"/>
	<!-- Heart selector used for sub-aa buttons -->
	<attr name="unlove_selector_subaa" format="reference"/>
	<!-- The menu icon for sub-aa buttons -->
	<attr name="menu_subaa" format="reference"/>

	<!-- These are overridden for alt styles + overlap_track_labels_no_bg -->
	<attr name="ItemTrackAAImage_scene_header_drawableTintColor" format="color"/>

	<attr name="ItemTrackTitle_scene_header_lineBackground" format="reference"/>
	<attr name="ItemTrackLine2_scene_header_lineBackground" format="reference"/>
	<attr name="ItemTrackMeta_scene_header_w_meta_background" format="reference"/>
	<attr name="ListHeaderButton_scene_header_background" format="reference"/>
	<attr name="ItemTrackMenu_scene_header_background" format="reference"/>
	<attr name="ItemTrackBackDecorTitle_scene_header_back_decor_background" format="reference"/>
	<attr name="ItemTextBackDecorTitle_scene_header_back_decor_background" format="reference"/>
	<attr name="ListHeaderButton_scene_header_marginLeft" format="dimension"/>
	<attr name="ListHeaderButton_scene_header_marginRight" format="dimension"/>
	<attr name="ListHeaderButton_scene_header_marginBottom" format="dimension"/>
	<attr name="ListMenu_scene_header_marginBottom" format="dimension"/>
	<attr name="ItemBackDecorTitle_scene_header_back_decor_marginLeft" format="dimension"/>

	<!-- OptionRoundedScreenCorners -->
	<attr name="OptionRoundedScreenCorners_corners_header" format="dimension"/>
	<attr name="OptionRoundedScreenCorners_header_aa_elevation" format="dimension"/>
	<attr name="OptionRoundedScreenCorners_buttons_scene_header_marginBottom"/>
	
	<!-- -->
		
	<declare-styleable name="ListMetaIcons">
		<attr name="meta_songs_12dp"/>
		<attr name="keep_list_pos_12dp" format="reference"/>
		<attr name="keep_track_pos_12dp" format="reference"/>
		<attr name="keep_list_track_pos_12dp" format="reference"/>
		<attr name="meta_songs_w_lyrics_12dp"/>
	</declare-styleable>
	
	<!-- Small star drawables for list cat image (1-5 stars). NOTE: style itself is not used in resources, just in code --> 
	<declare-styleable name="RatingStars_8dp">
		<attr name="star_8dp" format="reference"/>
		<attr name="star_2_8dp" format="reference"/>
		<attr name="star_3_8dp" format="reference"/>
		<attr name="star_4_8dp" format="reference"/>
		<attr name="star_5_8dp" format="reference"/>
	</declare-styleable>
	<declare-styleable name="RatingThumbs_8dp">
		<attr name="micro_low_rated" format="reference"/>
		<attr name="micro_top_rated" format="reference"/>
	</declare-styleable>
	
	<attr name="media_route" format="reference"/>

	<!-- Used for list buttons, such as menu, lyrics, shuffle, play, select, etc. -->
	<attr name="list_buttons_outline_provider">
		<enum name="background" value="0" />
		<enum name="none" value="1" />
		<enum name="bounds" value="2" />
		<enum name="paddedBounds" value="3" />
	</attr>

	<attr name="aa_elevation" format="dimension"/><!-- When on main screen -->
	<attr name="list_aa_elevation" format="dimension"/><!-- When in list -->
	<attr name="grid_aa_elevation" format="dimension"/><!-- When in grid -->
	<attr name="header_aa_elevation" format="dimension"/>
	<attr name="over_aa_elevation" format="dimension"/><!-- Max. aa elevation - to keep some other views always on top of AA -->
	<!-- REVISIT: not used ATM -->
	<attr name="over_aa_elevation_plus" format="dimension"/><!-- Same as over_aa_elevation with small increase -->
	<attr name="VisPanelFrame_elevation" format="dimension"/>
	<attr name="item_ontop_elevation" format="dimension"/><!-- Elevation which is over any other standard item child views -->
	<attr name="navbar_elevation" format="dimension"/>
	<attr name="bottom_toolbar_elevation" format="dimension"/><!-- Elevation for list bottom buttons. Should generally match navbar_elevation -->


	<!-- AA corners for various scenes and item types:
		 - tracks => any tracks lists and big AA on main screen
		 - albums => includes Albums, Genres, Playlists, etc. non-human categories
		 - other => human categories (Artists, Album Artists, Composers)
		 
		 Can be "matchHeight" - makes it round
		 Can be @id/some_id reference to the skin <seekbar> option controlled float value
	-->
	
	<attr name="corners_aa_scene_aa" format="dimension|reference"><!-- Main screen big AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>

	<attr name="corners_aa_tracks" format="dimension|reference"><!-- List AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_albums" format="dimension|reference"><!-- List AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_other" format="dimension|reference"><!-- List AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>

	<attr name="corners_aa_tracks_menu" format="dimension|reference"><!-- Menu AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_albums_menu" format="dimension|reference"><!-- Menu AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_other_menu" format="dimension|reference"><!-- Menu AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>

	<attr name="corners_aa_tracks_zoomed" format="dimension|reference"><!-- Zoomed list AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_albums_zoomed" format="dimension|reference"><!-- Zoomed list AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_other_zoomed" format="dimension|reference"><!-- Zoomed list AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_tracks_grid" format="dimension|reference"><!-- Grid AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_albums_grid" format="dimension|reference"><!-- Grid AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_other_grid" format="dimension|reference"><!-- Grid AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_tracks_grid_zoomed" format="dimension|reference"><!-- Zoomed grid AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_albums_grid_zoomed" format="dimension|reference"><!-- Zoomed grid AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_other_grid_zoomed" format="dimension|reference"><!-- Zoomed grid AA corners -->
		<enum name="matchHeight" value="-1"/>
	</attr>
	<attr name="corners_aa_tracks_small" format="dimension|reference"><!-- Compact list => possible only for tracks -->
		<enum name="matchHeight" value="-1"/>
	</attr>

	<!-- NOTE: matchHeight not supported as it makes no sense for the header -->
	<attr name="corners_aa_tracks_header" format="dimension"/>
	<!-- NOTE: matchHeight not supported as it makes no sense for the header -->
	<attr name="corners_aa_albums_header" format="dimension"/>
	<!-- NOTE: matchHeight not supported as it makes no sense for the header -->
	<attr name="corners_aa_other_header" format="dimension"/>


	<!-- AA corners for miniplayer -->
	<attr name="corners_miniplayer_aa" format="dimension|reference">
		<enum name="matchHeight" value="-1"/>
	</attr>

	<!-- "eatFontPads" attribute for all track text views -->
	<attr name="TrackItem_eatFontPads" format="boolean"/>
	
	<!-- layout_alignToContent attribute for track text views with the "all" alignToContent.
	     This is only needed for non-updated skins which except alignment to the padding -->
	<attr name="TrackItem_alignToContent">
		<enum name="none" value="0"/>
		<enum name="all" value="0x30000"/>
	</attr>

	<!-- layout_alignToContent attribute for track text views with the "horizontal" alignToContent.
	     This is only needed for non-updated skins which except alignment to the padding -->
	<attr name="TrackItem_alignToContent_horizontal">
		<enum name="none" value="0"/>
		<enum name="horizontal" value="0x10000"/>
	</attr>

	<attr name="EqMilkFrs_presetUri" format="string"/>

	<attr name="EqTonePanel_paddingTop" format="dimension"/>
	<attr name="EqTonePanel_paddingBottom" format="dimension"/>

	<!-- Extra optional layout to include into TopWaveseekLayout (e.g. extra pro-buttons, but can be anything skin wants) -->
	<attr name="TopWaveseekLayout_extraLayout" format="reference"/>
	
	<!-- Extra optional layout to include into TopContainer (e.g. counter, but can be anything skin wants) -->
	<attr name="TopContainer_extraLayout" format="reference"/>

	<!-- Optional meta_info_layout layout. This is the default position used for most themes, though theme can disable
	     this one by using TopContainer_metaLayout=>@null and including metaLayout into e.g. TopWaveseekLayout -->
	<attr name="TopContainer_metaLayout" format="reference"/>

	<!-- Optional layout to include into ItemLikeUnlikeLayout, when item is AA scene (or going to AA scene) --> 
	<attr name="ItemLikeUnlikeLayout_layout" format="reference"/>
	
	<!-- Style for enabled/disabled Chromecast button in menu. Also used in OptionCCDisabled/OptionCCInMenu/OptionCCMainUIAndInMenu --> 
	<attr name="CcButton_NavbarExtensionMenuLine" format="reference"/>
	
	<!-- Style for enabled/disabled Chromecast button on main screen. Also used in OptionCCDisabled/OptionCCInMenu/OptionCCMainUIAndInMenu --> 
	<attr name="CcButton_MainUI" format="reference"/>
	<attr name="CcButton_MainUI_scenes_playing" format="reference"/>
	<attr name="CcButton_MainUI_scenes_vis_w_ui" format="reference"/>
	<attr name="CcButton_MainUI_scenes_invisible" format="reference"/>
	<attr name="CcButton_MainUI_scene_vis" format="reference"/>
		
	<!-- This depends on theme opts, e.g. this may be different for Alt + PlainSeekbar vs just PlainSeekbar -->
	<attr name="PlainSeekbar_buttons_offset" format="dimension"/>

	<!-- Used to override Title and Line2 background in alt mode, when we may need to have different colors vs non-alt mode -->
	<attr name="ItemTrack_labels_scene_grid_lineBackground" format="color|reference"/>
	<!-- Used to override Title and Line2 text color in alt mode, when we may need to have different colors vs non-alt mode -->
	<attr name="ItemTrack_labels_scene_grid_textColor" format="color"/>

	<attr name="Alt_ListSubstyle_gridItem1LineExtraSpace" format="dimension"/>
	<attr name="Alt_ListSubstyle_gridZoomedItem1LineExtraSpace" format="dimension"/>
	<attr name="Alt_ListSubstyle_gridItemExtraSpace" format="dimension"/>
	<attr name="Alt_ListSubstyle_gridZoomedItemExtraSpace" format="dimension"/>

	<attr name="ItemTrackTitle_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_small_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_zoomed_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_grid_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_grid_zoomed_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_grid_1_alt_zoomed_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_header_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_aa_scale" format="float"/>
	<attr name="ItemTrackTitle_scene_item_menu_scale" format="float"/>
	<attr name="Alt_ItemTrackTitle_scene_aa_scale" format="float"/>

	<attr name="ItemTrackTitle_paddingLR" format="dimension"/>
	<attr name="ItemTrackTitle_paddingTB" format="dimension"/>

	<attr name="ItemTrackLine2_scale" format="float"/>
	<attr name="ItemTrackLine2_scene_small_scale" format="float"/>
	<attr name="ItemTrackLine2_scene_zoomed_scale" format="float"/>
	<attr name="ItemTrackLine2_scene_grid_scale" format="float"/>
	<attr name="ItemTrackLine2_scene_grid_zoomed_scale" format="float"/>
	<attr name="ItemTrackLine2_scene_header_scale" format="float"/>
	<attr name="ItemTrackLine2_scene_aa_scale" format="float"/>
	<attr name="ItemTrackLine2_scene_item_menu_scale" format="float"/>
	<attr name="Alt_ItemTrackLine2_scene_aa_scale" format="float"/>
	<attr name="ItemTrackLine2_paddingLR" format="dimension"/>
	<attr name="ItemTrackLine2_paddingTB" format="dimension"/>

	<attr name="ItemTrackMeta_drawableAdj" format="dimension"/>
	<attr name="ItemTrackMeta_scale" format="float"/>
	<attr name="ItemTrackMeta_scene_small_scale" format="float"/>
	<attr name="ItemTrackMeta_scene_zoomed_scale" format="float"/>
	<attr name="ItemTrackMeta_scene_grid_scale" format="float"/>
	<attr name="ItemTrackMeta_scene_grid_zoomed_scale" format="float"/>
	<attr name="ItemTrackMeta_scene_header_w_meta_base_scale" format="float"/>
	<attr name="ItemTrackMeta_scene_header_scale" format="float"/>
	<attr name="ItemTrackMeta_scene_item_menu_scale" format="float"/>
	<attr name="ItemTrackMeta_marginTop" format="dimension"/>
	<attr name="ItemTrackMeta_paddingLR" format="dimension"/>
	<attr name="ItemTrackMeta_drawablePadding" format="dimension"/>
	<attr name="ItemTrackMeta_drawablePaddingStart" format="dimension"/>


	<attr name="ItemMiniplayer_paddingLeft" format="dimension"/>

	<attr name="TopListScrollerView_marginTop" format="dimension"/>
	<attr name="TopListScrollerView_marginBottom" format="dimension"/>
	<attr name="TopListScrollerView_azTextScale" format="float"/>


			
	<!-- Styles, applied to ListWidget internals (e.g. LayoutEngines/HeaderEngines/etc.) -->
	<declare-styleable name="ListSubstyle">
		<!-- Controls size of an item in scene_aa. Calculated as ratio * screen width (portrait) or ratio * screen height (landscape) 
			 Usually == 100%, but can be smaller for shorter screens, to leave a bit more space on bottom for controls
			 NOTE: fraction, to allow same dimens for TopAABounds layout_widthPercent/layout_heightPercent, which is fraction too and should be matched  
		--> 
		<attr name="aaItemRatio" format="fraction"/>
		<!-- Optional max. size for album art (either width or height). As aaItemRatio can cause AA too large for given screen (e.g. if screen is somewhat wider, lower screen aspect ratio),
			 this can be used to limit total album art width or height. NOTE: aaPadding* is accounted for max size calculation -->
		<attr name="aaMaxSize" format="dimension"/>
		
		<!-- Optional min. size for album art (either width or height) -->
		<attr name="aaMinSize" format="dimension"/>
		
		<!-- Number of additional AA items to render to the left / right of the main item. Usually this is 1, but for e.g. wide/landscape layouts, extra items may be needed -->
		<attr name="aaSideItemNum" format="integer"/>
		
		<!-- Horizontal gravity for AA item -->
		<attr name="aaGravity">
			<flag name="center_horizontal" value="0x01" />
			<flag name="left" value="0x03" />
			<flag name="right" value="0x05" />
		</attr>
		
		<!-- By default, AA _item_ layout bounds are limited by album art size + paddings. If this option is set,
			 AA item layout bounds will match whole list on appropriate axises.
			 This applied to item bounds, the album art image dimension / position is not affected.
			 Useful for other item views (e.g. title, line2) which can be freely positioned in list bounds as needed -->
		<attr name="aaItemBoundsMatchList">
			<flag name="none" value="0x0" /><!-- NOTE: sync with AALayoutEngine MATCH_LIST_* -->
			<flag name="width" value="0x1" />
			<flag name="height" value="0x2" />
		</attr>

		<!-- Defines the min. w/h ratio (aspect) to apply the alternative AA item layout (non-square wide layout) -->
		<attr name="altAaLayoutRatio" format="float"/>
		<!-- We don't apply alt layout if avail screen width is larger than that -->
		<attr name="maxAvailSizeForAltAaLayout" format="dimension"/>
		
		<!-- Additional margin to apply to AA layout. Usuful e.g. to offset AA item from navbar -->
		<attr name="aaMarginLeft" format="dimension|reference"/>
		<!-- Additional margin to apply to AA layout. Usuful e.g. to offset AA item from navbar -->
		<attr name="aaMarginTop" format="dimension|reference"/>
		<!-- Additional margin to apply to AA layout. Usuful e.g. to offset AA item from navbar -->
		<attr name="aaMarginRight" format="dimension|reference"/>
		<!-- Additional margin to apply to AA layout. Usuful e.g. to offset AA item from navbar -->
		<attr name="aaMarginBottom" format="dimension|reference"/>
		
		<!-- Additional padding to apply to AA layout. Usuful e.g. for landscape or extra views inside AA "frame" -->
		<attr name="aaPaddingLeft" format="dimension"/>
		<!-- Additional padding to apply to AA layout. Usuful e.g. for landscape or extra views inside AA "frame" -->
		<attr name="aaPaddingTop" format="dimension"/>
		<!-- Additional padding to apply to AA layout. Usuful e.g. for landscape or extra views inside AA "frame" -->
		<attr name="aaPaddingRight" format="dimension"/>
		<!-- Additional padding to apply to AA layout. Usuful e.g. for landscape or extra views inside AA "frame" -->
		<attr name="aaPaddingBottom" format="dimension"/>

		<!-- Max X rotation for AA item when swiped left/right. Default value is 5.0.
		     Not applied on some devices which have rendered artifacts for this property (Androids 8.1 and below)
		     Supports <seekbar> option id reference -->
		<attr name="aaMaxXRotation" format="float|reference"/>
		<!-- Max Y rotation for AA item when swiped left/right. Default value is -10.0.
		     Not applied on some devices which have rendered artifacts for this property (Androids 8.1 and below)
		     Supports <seekbar> option id reference -->
		<attr name="aaMaxYRotation" format="float|reference"/>
		<!-- Max Z rotation for AA item when swiped left/right. Default value is 5.5
             Not applied on some devices which have rendered artifacts for this property (Androids 9 and above)
		     Supports <seekbar> option id reference -->
		<attr name="aaMaxZRotation" format="float|reference"/>

		<!-- If true, use absolute (no negative sign) value for the appropriate rotation. This makes the rotation symmetrical for
		     both left and right swipes. Default is true -->
		<attr name="absForXRotation" format="boolean"/>
		<!-- If true, use absolute (no negative sign) value for the appropriate rotation. This makes the rotation symmetrical for
		     both left and right swipes. Default is false -->
		<attr name="absForYRotation" format="boolean"/>
		<!-- If true, use absolute (no negative sign) value for the appropriate rotation. This makes the rotation symmetrical for
		     both left and right swipes. Default is false -->
		<attr name="absForZRotation" format="boolean"/>

		<!-- Max scale to use for the hidden (out of the screen) items. Default value is 0.5
		     NOTE: normal (center of the screen) scale is always 1.0. The item image, text, and buttons are scaled.
		     Supports <seekbar> option id reference -->
		<attr name="aaMaxScale" format="float|reference"/>
		<!-- Dense factor > 0.0f. Values < 1 will make AA items closer to each other. Default value is 0.75 
		     Supports <seekbar> option id reference -->		
		<attr name="aaDenseFactor" format="float|reference"/>

		<!-- Normal list item size. NOTE: grid layouts have automatic cell size, which depends on screen width and number of columns -->
		<attr name="itemSize"/>
		<!-- Small scene_small item size -->
		<attr name="itemSizeSmall" format="dimension"/>
		<!-- Small scene_small_no_aa item size w/o AA -->
		<attr name="itemSizeSmallNoAA" format="dimension"/>
		<!-- Small 1-line scene_1_small item size w/o AA -->
		<attr name="itemSize1SmallNoAA" format="dimension"/>
		<!-- Extra small 1-line scene_1_small item size w/o AA -->
		<attr name="itemSize1SmallNoAAExtraSmall" format="dimension"/>
		<!-- List item size for +1 zoom level -->
		<attr name="itemSizeZoomed" format="dimension"/>

		<!-- NOTE: lyrics item size (row height) is dynamic - it depends on lyrics text in the line -->

		<!-- Alpha to apply for lyrics item past current one (previous lines). Default is 1.0 -->
		<attr name="lyricsPrevAlpha" format="float"/>
		<!-- Alpha to apply for the next lyrics item. Alpha is applied gradually. Default is 1.0 -->
		<attr name="lyricsNextAlpha" format="float"/>

		<!-- If true, list automatically adds status bar height to all headers, thus, in this case, all header sizes should exclude default Android status bar height.
			 While Android status bar height is usually 24dp, it may be different on devices with notch and absolute pixel size fixed status bar height matching the notch. 
			 Works only if offsetWindowInsets is specified for the list -->
		<attr name="addStatusBarHeightToHeaders" format="boolean"/>
		 
		<!-- If headerSize<=0, headerSize will be list width/2 -->
		<attr name="headerSize" format="dimension"/>
		<!-- Compact header size. If headerSize<=0, headerSize will be list width/2 -->
		<attr name="compactHeaderSize" format="dimension"/>
		<!-- Larger header size for "human" categories, i.e. artists/composers, also years -->
		<attr name="humanCatHeaderSize" format="dimension"/>
		<!-- Maximum system font scale setting to allow apply "compact" header sizes. 
		     If user sets font scale larger than that, compact header option is disabled -->
		<attr name="maxFontScaleForCompact" format="float"/>
		<!-- Compact header size for "human" categories, i.e. artists/composers, also years -->
		<attr name="compactHumanCatHeaderSize" format="dimension"/>
		<!-- Size for header in search page -->
		<attr name="searchHeaderSize" format="dimension"/>
		<!-- Size for header in target search page -->
		<attr name="targetSearchHeaderSize" format="dimension"/>
		<!-- Separator size, e.g. for search results separators -->
		<attr name="separatorSize" format="dimension"/>
		<!-- Size of the search history item -->
		<attr name="searchHistoryItemSize" format="dimension"/>
		<!-- Text item size (first level library items) -->
		<attr name="textItemSize" format="dimension"/>
		<!-- Smaller text item size (first level library items) -->
		<attr name="compactTextItemSize" format="dimension"/>
		<!-- Text item size (first level library items as headers) -->
		<attr name="textHeaderSize" format="dimension"/>
		<!-- Compact text item size (first level library items as headers) -->
		<attr name="compactTextHeaderSize" format="dimension"/>
		<!-- Top text header size (basically, the Library header itself) -->
		<attr name="topTextHeaderSize" format="dimension"/>
		<!-- Lyrics header size -->
		<attr name="lyricsHeaderSize" format="dimension"/>
		<!-- Lyrics sub-header size -->
		<attr name="lyricsSubheadSize" format="dimension"/>

		<!-- Size of all-tracks subheader, e.g. Artists/Albums all songs -->
		<attr name="allTracksSubheadSize" format="dimension"/>
		<!-- Size of meta subheader, e.g. for any Files -->
		<attr name="metaSubheadSize" format="dimension"/>

		<!-- Bottom toolbar size -->
		<attr name="bottomToolbarSize" format="dimension"/>
		<!-- Bottom toolbar translationZ -->
		<attr name="bottomToolbarZ" format="dimension"/>
		
		<!-- Extra space to add to calculated grid cell for 1line human categories, e.g. to place title there -->
		<attr name="humanGridItemExtraSpace" format="dimension"/>
		<!-- Extra space to add to calculated grid cell for 1line human categories, e.g. to place title there -->
		<attr name="humanGridZoomedItemExtraSpace" format="dimension"/>
		
		<!-- Extra space to add to calculated grid cell for any other 1line categories, e.g. to place title there -->
		<attr name="gridItem1LineExtraSpace" format="dimension"/>
		<!-- Extra space to add to calculated grid cell for any other 1line categories, e.g. to place title there -->
		<attr name="gridZoomedItem1LineExtraSpace" format="dimension"/>
		
		<!-- Extra space to add to calculated grid cell for any other 2line categories, e.g. to place title there -->
		<attr name="gridItemExtraSpace" format="dimension"/>
		<!-- Extra space to add to calculated grid cell for any other 2line categories, e.g. to place title there -->
		<attr name="gridZoomedItemExtraSpace" format="dimension"/>
		
		<!-- If defined, header image or background stretches on scroll overshoot.
			 Should be id referencing ImageView or ItemImageView in item view and it will be stretched as background.
		-->
		<attr name="headerStretchyImage" format="reference"/>

		<!-- Auto animation time (for the clicked item/nav button) -->
		<attr name="pageAnimTime" format="integer"/>

		<!-- Animation time when manual transition is committed -->
		<attr name="pageManualCommitAnimTime" format="integer"/>
		<!-- Animation time when manual transition is canceled -->
		<attr name="pageManualCancelAnimTime" format="integer"/>
		
		<!-- Animation time for AA auto animation between tracks -->
		<attr name="aaPosAnimTime" format="integer"/>
		<!-- Animation time for AA manual animation between tracks. 
			 NOTE: the exact animation time will be less as animation time also depends on the distance and swipe velocity -->
		<attr name="aaPosSettleAnimTime" format="integer"/>
		
		<!-- Auto animation between top lib page and search page --> 
		<attr name="libSearchAnimTime" format="integer"/>
		
		<!-- Auto animation for AA to top lib page transition.NOTE: applied for non-shared item transitions. Shared item transitions use pageAnimTime --> 
		<attr name="aaToTopLibAnimTime" format="integer"/>
		
		<attr name="topLibToAAAnimTime" format="integer"/>
		
		<!-- Auto animation for AA to top search page transition --> 
		<attr name="aaToSearchAnimTime" format="integer"/>
		<!-- Auto animation for search to AA page transition --> 
		<attr name="searchToAAAnimTime" format="integer"/>

		<!-- Auto animation for AA to lyrics page transition -->
		<attr name="aaToLyricsAnimTime" format="integer"/>
		<!-- Auto animation for lyrics to AA page transition -->
		<attr name="lyricsToAAAnimTime" format="integer"/>
	</declare-styleable>
	
	<declare-styleable name="AABounds">
		<!-- If true, we're matching all these aa* attributes. False is the default - for old skins -->
		<attr name="matchAASubstyle" format="boolean"/>
		<attr name="altAaLayoutRatio"/>
		<attr name="maxAvailSizeForAltAaLayout"/>
		<attr name="offsetWindowInsets"/>
		<attr name="aaItemRatio"/>
		<attr name="aaMaxSize"/>
		<attr name="aaMinSize"/>
		<attr name="aaGravity"/>
		<attr name="aaItemBoundsMatchList"/>
		<attr name="aaMarginLeft"/>
		<attr name="aaMarginTop"/>
		<attr name="aaMarginRight"/>
		<attr name="aaMarginBottom"/>
		<attr name="aaPaddingLeft"/>
		<attr name="aaPaddingTop"/>
		<attr name="aaPaddingRight"/>
		<attr name="aaPaddingBottom"/>
	</declare-styleable>
	
	<!-- Custom image view, used specifically to display Album Art/icons in list items -->
	<declare-styleable name="AAImageView">
		<!--
			Defines corners for: 
			- Tracks (cornerRadius)
			- Albums (cornerRadius2)
			- Artists/Genres/Composers (cornerRadius3)
			The selection is done by provider on binding, depending on the item category type
			These 3 radiuses can be defined per each scene, though there is little point in the definition for all of them,
			e.g. for scene_aa* scenes (as only tracks are shown there);
			though headers, menus, and grid/list scenes should have these defined  
		-->
		<!-- Defines corners for Tracks -->
		<attr name="cornerRadius1" format="dimension|reference">
			<enum name="matchHeight" value="-1"/>
		</attr>
		<!-- Defines corners for Albums -->
		<attr name="cornerRadius2" format="dimension|reference">
			<enum name="matchHeight" value="-1"/>
		</attr>
		<!-- Defines corners for Artists/Genres/Composers -->
		<attr name="cornerRadius3" format="dimension|reference">
			<enum name="matchHeight" value="-1"/>
		</attr>

		<attr name="hiRes" format="boolean"/><!-- If true, larger, higher resolution bitmap is loaded. Not for use for grids/lists, but for AA layout -->
		
		<attr name="android:scaleType"/>
		<attr name="android:maxWidth"/>
		<attr name="android:maxHeight"/>
		<attr name="android:src"/>

		<attr name="drawableTintColor" format="color"/><!-- NOTE: state lists not supported -->
		<attr name="drawableTintMode2"/>
	</declare-styleable>
	
	<!-- Scene params for AAImageView -->
	<declare-styleable name="AAImageViewSceneParams">
		<attr name="applyViewParams"/>
		
		<attr name="cornerRadius1"/>
		<attr name="cornerRadius2"/>
		<attr name="cornerRadius3"/>
		
		<attr name="hiRes"/>
		<attr name="android:elevation"/>

		<attr name="drawableTintColor"/>

		<!-- Always apply fade effect for AA on image change -->
		<attr name="alwaysFade" format="boolean"/>
	</declare-styleable>
	
	<declare-styleable name="EqKnobsFastLayout">
		<!-- If true, special lines background is rendered, android:background is ignored. EqLinesDrawable attributes can be used right in EqKnobsFastLayout styles -->
		<attr name="linesBackground" format="boolean"/>
	</declare-styleable>
	
	<declare-styleable name="EqLinesDrawable">
		<attr name="lineDrawableOffsetLeft" format="dimension"/>
		
		<!-- Vertical offset for top line -->
		<attr name="line1Offset" format="dimension"/>
		<!-- Vertical offset for center line -->
		<attr name="line2Offset" format="dimension"/>
		<!-- Vertical offset for bottom line -->
		<attr name="line3Offset" format="dimension"/>
		
		<attr name="line13Color" format="color|reference"/>
		<attr name="line2Color" format="color|reference"/>
		<attr name="backgroundColor" format="color|reference"/>		
		<attr name="stroke"/>
		
			<!-- Sets DashPathEffect intervals and phase. DashPathEffect documentation:
			 * The intervals array must contain an even number of entries (>=2), with
			 * the even indices specifying the "on" intervals, and the odd indices
			 * specifying the "off" intervals. phase is an offset into the intervals
			 * array (mod the sum of all of the intervals). The intervals array
			 * controls the length of the dashes. The paint's strokeWidth controls the
			 * thickness of the dashes.
			 
			 dashes are in dp
		 -->
		<attr name="dashes" format="string"/>
		<attr name="dashesPhase" format="dimension"/>
	</declare-styleable>
		
	<declare-styleable name="KnobLabelAndValue">
		<attr name="labelBackground" format="reference|color"/>
		<!-- Extra paddings between labelBackground and text inside. Can be negative -->
		<attr name="labelBackgroundPaddingLeft" format="dimension"/>
		<attr name="labelBackgroundPaddingRight" format="dimension"/>
		<attr name="labelBackgroundPaddingTop" format="dimension"/>
		<attr name="labelBackgroundPaddingBottom" format="dimension"/>
		
		<attr name="labelBackgroundAnimZoom" format="float"/>
		<attr name="labelBackgroundAnimZoomY" format="float"/>
		
		<attr name="hideLabel" format="boolean"/>
		
		<!-- Padding between value and text -->
		<attr name="valuePadding" format="dimension"/>
		
		<attr name="valueTextAppearance" format="reference"/>
		<attr name="valueAnimZoom" format="float"/>
		<attr name="valueAnimTime" format="integer"/>
		
		<!-- If set, dialog for manual entry is shown -->
		<attr name="dialogTitle" format="string"/>
		<attr name="dialogMsg" format="string"/>
				
		<!-- Default is vertical. Appropriate inner drawables should be also provided rotated as needed -->
		<attr name="android:orientation"/>
		<!-- Default is center_horizontal. left and center_horizontal supported only -->
		<attr name="android:gravity"/>
		
		<attr name="android:text"/>
		<attr name="android:textAppearance"/>
		<attr name="android:textSize"/>
		<attr name="android:textColor"/>
		<attr name="android:textStyle"/>
		<attr name="android:fontFamily" />
		<attr name="android:typeface" />
		<attr name="android:textAllCaps" />
		<attr name="textSizeMultiplierPref"/>
		<attr name="fontPads"/>
	</declare-styleable>
	
	<!-- NOTE: all KnobLabelAndValue attributes are also supported -->
	<declare-styleable name="LinearKnob">
		<attr name="thumb" format="reference" />
		<!-- Optional thumb width, required for cases when drawable is xml and it's not possible to calculate desired size from that drawable -->
		<attr name="thumbWidth" format="dimension"/>
		<!-- Optional thumb height, required for cases when drawable is xml and it's not possible to calculate desired size from that drawable -->
		<attr name="thumbHeight" format="dimension"/>
		<!-- Hole size is the view size, thus, inner hole drawable paddings should be used to position it inside linear knob -->
		<attr name="hole" format="reference" />
		<attr name="pos" format="integer" />
		<attr name="value" format="float"/>
		
		<!-- If defined (and hole drawable defined as well), the value color is drawn instead of hole drawable. 
		     If just start color is defined - this is the color for whole shape, othersiwe color changes from start color to the appropriate end color -->
		<attr name="holeStartColor" format="color|reference"/>
		<attr name="holeMidColor" format="color|reference"/>
		<attr name="holeEndColor" format="color|reference"/>
		<!-- If defined, the value glow color is drawn. Same as holeStartColor, but applied to the glow.
		     If just start color is defined - this is the color for whole shape, othersiwe color changes from start color to the appropriate end color.
		     Applied on Androids 9+ (SDK=28+) -->
		<attr name="holeGlowStartColor" format="color|reference"/>
		<attr name="holeGlowMidColor" format="color|reference"/>
		<attr name="holeGlowEndColor" format="color|reference"/>
		<attr name="holeColorWidth" format="dimension"/>
		<attr name="holeColorRadius" format="dimension"/>
		<attr name="holeGlowWidth" format="dimension"/>
		<!-- Sets color starting point, e.g. 0.5 for middle as for Preamp -->
		<attr name="holeColorStartPoint" format="float"/>
		
		<!-- Vertical padding between linear knob text and knob drawables -->
		<attr name="textPadding" format="dimension"/>
		
		<attr name="valueFormat" format="string"/>
		<attr name="valueFormatMin" format="float"/>
		<attr name="valueFormatMax" format="float"/>
		<!-- The "middle" value to use for visible value scaling. This middle position can be anywhere within round  knob range, as defined by valueFormatMidPos.
		     NOTE: this doesn't affect actual knob value which is always uniformally in range [0..1] -->
		<attr name="valueFormatMid" format="float"/>
		<!-- The actial "middle" position location in internal scale of knob: [0..1].
		     NOTE: this doesn't affect actual knob value which is always uniformally in range [0..1] -->
		<attr name="valueFormatMidPos" format="float"/>
		
		<!-- If true, special lines background is rendered, android:background is ignored. EqLinesDrawable attributes can be used right in EqKnobsFastLayout styles -->
		<attr name="linesBackground"/>
	</declare-styleable>
	
	<!-- NOTE: also applies to DSPBusCheckButton -->
	<declare-styleable name="DSPLinearKnob">
		<!-- @id/dsp_* parameter, should be boolean for DSPBusCheckButton -->
		<attr name="param" format="reference"/>
		<!-- One of msg_dsp_eq_changed/msg_dsp_other_changed/msg_dsp_reverb_changed to listen to --> 
		<attr name="updateMsgId"/>
		<!-- if true, we're expecting -1..0..1 range from the state param -->
		<attr name="minus1Plus1Range" format="boolean"/>
	</declare-styleable>
	
	<declare-styleable name="RoundKnob">
		<attr name="knob" format="reference"/>
		<attr name="indicator" format="reference"/>
		<!-- Optional indicator drawable scale. Default is 1.0 
			 NOTE: this also scales possible drawable top padding - the padding which offsets indicator from round knob edge
		-->
		<attr name="indicatorScale" format="float"/>
		<!-- Default is false. If true, also rotates knob image to the same angle as indicator  -->
		<attr name="rotateKnob" format="boolean"/>

		<!-- Gravity to use for the round knob inside the possibly non-rectangle bounds. Default is center -->
		<attr name="android:gravity"/>

		<!-- If defined (with arcWidth > 0), arc is drawn.
		     If just start color is defined - this is the color for whole shape, othersiwe color changes from start color to the appropriate end color -->
		<attr name="arcStartColor" format="color|reference"/>
		<attr name="arcMidColor" format="color|reference"/>
		<!-- The arc color when value is 1.0 (max value) -->
		<attr name="arcEndColor" format="color|reference"/>

		<!-- NOTE: "arc*" non color attribures are also directly used in app theme (via appropriate styles-eq) to allow easy changes with theme attribute w/o changing 
		     the styles.
		     If > 0 value arc is drawn of given width. Value arc reduces knob size by arcWidth + arcOffset from each side -->
		<attr name="arcWidth" format="dimension"/>
		<!-- The distance between arc and knob -->
		<attr name="arcOffset" format="dimension"/>
		
		<!-- Offset (padding) to knob when no arc. May be used to compensate padding for missing arc for appropriate user option -->
		<attr name="offsetWhenNoArc" format="dimension"/>
		
		<!-- If defined toghether with arc (with arcGlowWidth > 0), arc glow is drawn. 
			 If just start color is defined - this is the color for whole shape, othersiwe color changes from start color to the appropriate end color.
			 Applied on Androids 9+ (SDK=28+) -->
		<attr name="arcGlowStartColor" format="color|reference"/>
		<attr name="arcGlowMidColor" format="color|reference"/>
		<!-- The arc glow color when value is 1.0 (max value) -->
		<attr name="arcGlowEndColor" format="color|reference"/>				
		<!-- If > 0, additional "glow" is applied to arc. This doesn't take space thus requires parent views not to clip children -->
		<attr name="arcGlowWidth" format="dimension"/>
		
		<!-- Default is 0 - arc grows from 0 value, but can be e.g. 0.5 - arc grows to both sides (e.g. for the balance) -->
		<attr name="arcStartPoint" format="float"/>
				
		<!-- If non @null/@empty, snap will be automatically enabled -->
		<attr name="snapTo" format="float"/>
		<attr name="dependentLabel" format="reference"/>
		<attr name="dependentLabel2" format="reference"/>
		<attr name="dependentLabel3" format="reference"/>
		<attr name="valueLabel" format="reference"/>
		<attr name="valueFormat"/>

		<attr name="valueFormatMin"/>
		<attr name="valueFormatMax"/>
		<attr name="valueFormatMid"/>
		<attr name="valueFormatMidPos"/>
		<attr name="dialogPrecision" format="integer"/>
		
		<!-- Additional value to round to/from values prior setting. Resulting value is Math.round(value * rounding) / rounding --> 
		<attr name="rounding" format="float"/>

		<attr name="minDegree" format="float"/>
		<!-- Can be > 360 for multiple rotations -->
		<attr name="maxDegree" format="float"/>

		<!-- Number of vibrations per 1 rotation -->
		<attr name="bzzsPerRotation" format="integer"/>
		<!-- Default is 1. This depends on number of possible rotations and the required accuracy -->
		<attr name="bzzMarginDegrees" format="float"/>

	</declare-styleable>
	
	<declare-styleable name="DSPRoundKnob">
		<!-- @id/dsp_* parameter -->
		<attr name="param"/>
		<!-- @id/dsp_* boolean parameter, e.g. dsp_eq_enabled -->
		<attr name="enablingParam" format="boolean"/>
		<!-- One of msg_dsp_eq_changed/msg_dsp_other_changed/msg_dsp_reverb_changed to listen to --> 
		<attr name="updateMsgId"/>
		<!-- Animate to value on attach -->
		<attr name="animOnAttach" format="boolean"/>
	</declare-styleable>
	
	<declare-styleable name="DSPCheckBox">
		<!-- @id/dsp_* parameter -->
		<attr name="param"/>
		<!-- @id/dsp_* boolean parameter, e.g. dsp_eq_enabled -->
		<attr name="enablingParam"/>
		<!-- One of msg_dsp_eq_changed/msg_dsp_other_changed/msg_dsp_reverb_changed to listen to --> 
		<attr name="updateMsgId"/>
		
		<!-- If defined, this view will send appropriate cmd to dsp instead of enabling/disabling the param.
		     Param will be enabled/disabled by a long press (longPress* attrs are ignored then) -->
		<attr name="pressCmdId" format="reference"/>
		<attr name="pressBusId" format="reference"/>
		
		<attr name="firstPressToast"/>
		
		<attr name="longPressCmdId" format="reference"/>
		<!-- Optional string argument for pressCmdId or longRessCmdId -->
		<attr name="string"/>
		<!-- bus_dsp_cmd by default -->
		<attr name="longPressBusId" format="reference"/>		
		
		<attr name="toastOnPress"/>
		<attr name="toastHeaderOnPress" format="reference"/>
		<attr name="toastIconOnPress" format="reference"/>

		<!-- If set, this state is used for the toast msg (if string state returns non-null value) -->
		<attr name="toastStateIdOnPress" format="reference"/>

		<!-- If we're in some popup and this is true, we'll try not to close the popup -->
		<attr name="preferNotToClosePopup" format="boolean"/>
	</declare-styleable>

	<declare-styleable name="MilkFRS">
		<attr name="roundRectClipRadius" format="dimension"/>
		<attr name="presetUri" format="string"/>
	</declare-styleable>
		
	<declare-styleable name="FrequencyResponseScroller">
		<attr name="selectionDrawable" format="reference"/>
		<attr name="lineColor" format="color"/>
		<!-- Extra glow color. If not set/0 - not rendered. May be used only in graphical (non-parametric) mode -->
		<attr name="glowColor" format="color"/>
		<!-- Graphical mode line width -->
		<attr name="lineWidth" format="dimension"/>
		<!-- Parametric mode line width -->
		<attr name="parametricLineWidth" format="dimension"/>

		<!-- Gradient color for graphic mode line.
		     If all of these defined to value != #0000, we draw line with gradient:
		     [graphicColorMax, graphicColor75, lineColor, graphicColor25, graphicColorMin]  -->
		<attr name="graphicColorMax" format="color"/>
		<!-- Gradient color for graphic mode line -->
		<attr name="graphicColor75" format="color"/>
		<!-- Gradient color for graphic mode line -->
		<attr name="graphicColor25" format="color"/>
		<!-- Gradient color for graphic mode line -->
		<attr name="graphicColorMin" format="color"/>
		
		<attr name="cornerRadius1"/>
		
		<attr name="toneLineWidth" format="dimension"/>
		<attr name="toneFillColor" format="color"/>
		<!-- Optional. Only alpha value is used (if > 0) -->
		<attr name="toneFillColorAlpha" format="color" />
		<attr name="toneLineColor" format="color"/>
		<!-- Optional. Only alpha value is used (if > 0) -->
		<attr name="toneLineColorAlpha" format="color" />

		<!-- Extra tone curve glow color. If not set/0 - not rendered -->
		<attr name="toneGlowColor" format="color"/>
		
		<attr name="glowWidth" format="dimension"/>
		<attr name="blurWidth" format="float"/>
		
		<attr name="backLineColor" format="color"/>
		
		<attr name="miniMode" format="boolean"/>
		
		<attr name="android:orientation"/>
		<attr name="inset" format="dimension"/>
				
		<!-- Optional. If set, will scroll given scrollable view -->
		<attr name="scrollable" format="reference"/>
		
		<!-- If true, frs will connect to dsp and visualize current eq/tone bands -->
		<attr name="useDSPBus" format="boolean"/>
	</declare-styleable>
	
	<!-- NOTE: DSPRoundKnobLayout view also supports all the DSPBusRoundKnob/RoundKnob attributes - they are passed to inner DSPBusRoundKnob as is
		 Basically, DSPRoundKnobLayout is a compound view, with inner child views created as needed.
		 Full form (with all the inner children) matches this xml layout:
		 
			<com.maxmpz.widget.player.DSPRoundKnobLayout ...>
			
				<com.maxmpz.widget.player.DSPBusRoundKnob android:id="@id/_knob"
					style="roundKnobStyle"
					..(parent DSPRoundKnobLayout view attributes are passed here)..
				/>
				
				<com.maxmpz.widget.base.FastTextView android:id="@id/_left_label"
					android:text="leftLabelText"
					style="leftLabelStyle"
				/>
				<com.maxmpz.widget.base.FastTextView android:id="@id/_right_label"
					android:text="rightLabelText"
					style="rightLabelStyle"
				/>
				<com.maxmpz.widget.base.FastTextView android:id="@id/_label"
					android:text="labelText"
					style="labelStyle"
				/>
				<com.maxmpz.widget.base.FastTextView android:id="@id/_value_label" 
					style="valueLabelStyle"
				/>
				
			</com.maxmpz.widget.player.DSPRoundKnobLayout>
	 -->
	<declare-styleable name="DSPRoundKnobLayout">
		<!-- Defines left label style. If this attribute is missing, no left label rendered -->
		<attr name="leftLabelStyle" format="reference"/>
		<attr name="leftLabelText" format="string"/>
		<!-- Defines right label style. If this attribute is missing, no right label rendered -->
		<attr name="rightLabelStyle"  format="reference"/>
		<attr name="rightLabelText" format="string"/>
		<!-- Defines label style. If this attribute is missing, no label rendered -->
		<attr name="labelStyle" format="reference"/>
		<attr name="labelText" format="string"/>
		<!-- Defines value label style. If this attribute is missing, no value label rendered -->
		<attr name="valueLabelStyle" format="reference"/>
		<!-- Defines StateAnimParam style, activated for valueLabel on press  --> 
		<attr name="valueLabelPressedAnimStyle" format="reference"/>
		<!-- Defines lock label style -->
		<attr name="lockLabelStyle" format="reference"/>
		
		<!-- Round knob style -->
		<attr name="roundKnobStyle" format="reference"/>
		
		<!-- Id for a object state with dsp param definition -->
		<attr name="dspParamDef" format="reference"/>
	</declare-styleable>
	
	<declare-styleable name="PlayingMark">
		<!-- The transition ration point at which PlayingMark starts alpha animation. Should be < 1.
		     For example, alphaRatio=0 means PlayingMark alpha will be animated for whole transition range: 0..1,
		     alphaRatio=0.5 means alpha will be animated when transition is in range: 0.5..1, making PlayingMark less obstrutive for animations e.g. from main screen to list.
		     Default value is 0.5 -->
		<attr name="alphaRatio" format="float"/>
	</declare-styleable>
	
	<declare-styleable name="HelpLP">
		<attr name="help_anchor" format="reference"/>
		<attr name="help_position"><!-- Sync with HelpLayout -->
			<enum name="top" value="0"/>
			<enum name="right" value="1"/>
			<enum name="bottom" value="2"/>
			<enum name="left" value="3"/>
			<enum name="center" value="4"/>
		</attr>
		<attr name="help_inside" format="boolean"/>
		<!-- If true, view will be positioned by one axis (depending on help_position) -->
		<attr name="help_oneAxis" format="boolean"/>
	</declare-styleable>
	<declare-styleable name="Help">
		<attr name="arrowWidth" format="dimension"/>
		<attr name="arrowHeight" format="dimension"/>
		<attr name="arrowOffset" format="dimension"/>
		<!-- This is used for the arrow stoke width AND this is the assumed stroke width of the background -->
		<attr name="arrowStrokeWidth" format="dimension"/>
		<attr name="arrowLineWeight" format="dimension"/>
		<!-- If true, we show arrow to the anchor view. By default we prefer centered target of the arrow on x axis -->
		<attr name="showArrow" format="boolean|enum">
			<!-- Also boolean=true -->
			<enum name="show" value="1"/>
			<!-- Prefer left direction of arrow on x axis -->
			<enum name="preferLeft" value="2"/>
			<!-- Prefer right direction of arrow on x axis -->
			<enum name="preferRight" value="3"/>
		</attr>
		<!-- Additional id for the extra arrow -->
		<attr name="showArrowTo" format="reference"/>
		<!-- Additional id for the extra arrow -->
		<attr name="showArrowTo2" format="reference"/>
		<attr name="arrowFillColor" format="color"/>
		<attr name="arrowStrokeColor" format="color"/>
		<attr name="drawableTint"/>
		<!-- Extra alpha to apply on background drawable -->
		<attr name="bgAlpha" format="float"/>

		<!-- NOTE: if html exists, it overwrites android:text  -->
		<attr name="html" format="string"/>
		<!-- NOTE: if any of lineX exists, it adds to existing android:text or html -->
		<attr name="line1"/>
		<attr name="line2"/>
		<attr name="line3"/>
		<attr name="line4"/>
		<!-- style/Hint is used by default -->
		<attr name="lineStyle" format="reference"/>
	</declare-styleable>
	
	<declare-styleable name="HtmlTextView">
		<attr name="html"/>
		<attr name="html_2" format="string"/>
		<attr name="drawableTint"/>
	</declare-styleable>	
	
	<declare-styleable name="DSPInfo">
		<attr name="AccentedText"/>
		<attr name="Text"/>
		<attr name="HeadText"/>
		<attr name="SubheadText"/>
		<attr name="Hint"/>

		<attr name="dspInfoImage" format="reference"/><!-- The target view where we put our drawable info -->
		<attr name="unknownIcon" format="reference"/>
		<attr name="drawableTint"/>
		
		<attr name="arrowWidth"/>
		<attr name="arrowHeight"/>
		<attr name="arrowOffset"/>
		<attr name="arrowStrokeWidth"/>
		<attr name="arrowLineWeight"/>
		<attr name="arrowFillColor"/>
		<attr name="arrowStrokeColor"/>

		<!-- Adds extra space for subHead lines -->
		<attr name="subheadPadding" format="dimension"/>
	</declare-styleable>
	
	<declare-styleable name="EqKnobParamLayout">
		<!-- Defines StateAnimParam style, activated for valueLabel on press  --> 
		<attr name="valueLabelPressedAnimStyle"/>
		<!-- Background left padding -->
		<attr name="bgPaddingLeft" format="dimension"/>
		<!-- Background right padding -->
		<attr name="bgPaddingRight" format="dimension"/>
		<!-- Background top padding -->
		<attr name="bgPaddingTop" format="dimension"/>
		<!-- Background bottom padding -->
		<attr name="bgPaddingBottom" format="dimension"/>
		<!-- Background corner radius -->
		<attr name="bgCorners" format="dimension"/>
		
		<!-- Dotted separator line color. Drawn to the right of the item -->
		<attr name="separatorColor" format="color"/>
		<!-- Dotted separator line width -->
		<attr name="separatorWidth" format="dimension"/>
		<!-- Right separator line padding -->
		<attr name="separatorPaddingRight" format="dimension"/>
		<!-- Top separator line padding -->
		<attr name="separatorPaddingTop" format="dimension"/>
		<!-- Bottom separator line padding -->
		<attr name="separatorPaddingBottom" format="dimension"/>
	</declare-styleable>
	
	<declare-styleable name="VericalSeparatorView">
		<attr name="lineColor"/>
	</declare-styleable>
	
	<declare-styleable name="ColorCircleSelector">
		<!-- integer-array of colors (in hex format as 0xAARRGGBB or 0xRRGGBB. Special 0x0 value means "new line". 0x000001 color means "nothing" -->
		<attr name="colorSet" format="reference"/>
		<!-- Size of the color circle (diameter). The border is added to this size -->
		<attr name="colorSize" format="dimension"/>
		<!-- Border width for the normal (not selected) state -->
		<attr name="borderWidth" format="dimension"/>
		<attr name="borderColor" format="color"/>
		<!-- Selected border width -->
		<attr name="selectedBorderWidth" format="dimension"/>
		<attr name="selectedBorderColor" format="color"/>
		<!-- Minumum padding for color circles. Horizontal padding can be increased to distribute circles horizontally. 
		     Padding should be enough to fit color borders as borders are drawn on paddings -->   
		<attr name="colorPadding" format="dimension"/>
	</declare-styleable>

	<declare-styleable name="TagsLayout">
		<!-- True by default. If false, we'll hide everything when empty -->
		<attr name="showEmpty" format="boolean"/>
		<!-- True by default -->
		<attr name="showTitle" format="boolean"/>
		<attr name="tagStyle" format="reference"/>
		<attr name="tagStyleReadOnly" format="reference"/>
		<!-- NOTE: not used by TagsLayout ATM, but used by the derived classes, i.e. NavExtSettingsTag -->
		<attr name="clickDelay"/>
	</declare-styleable>

	<!-- Deprecated -->

	<!-- @Deprecated -->
	<attr name="ItemTrackMeta_scene_item_menu_marginBottom" format="dimension"/>
	<!-- @Deprecated -->
	<attr name="ItemTrackTitle_marginBottom" format="dimension"/>



</resources>