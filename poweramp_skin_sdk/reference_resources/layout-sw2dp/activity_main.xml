<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2010-2023 Maksim Petrov

Redistribution and use in source and binary forms, with or without
modification, are permitted for themes, skins, widgets, plugins, applications and other software
which communicate with Poweramp music player application on Android platform.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<merge
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:tools="http://schemas.android.com/tools" xmlns:w="http://schemas.android.com/apk/res-auto"
>
<!--
	Top scenes:
	- main screen scenes:
	  - 0 == default. Paused. Scene with large AA
	  - scene_playing. Playing. Scene with large AA. NOTE: this is different scene vs scene_aa_playing used in the tracks
	  - scene_vis_w_ui (playing implied) - scene with small AA (internal list scene) + vis controls, optionally alpha faded. Should be separate <SceneParams> as it's modified by code
	  - scene_vis_temp_ui (playing implied) - scene with both AA + vis controls, alpha == 1 (to allow all UI use cases, e.g. popup menus)
	  - scene_vis (playing implied, nothing is visible except vis surface)
	  - scene_lyrics (lyrics page)
	- scene_lib
	- scene_search
	- scene_eq

	NOTE: for main screen TOP containers, scene_vis_w_ui should be ALWAYS separated from other scenes, i.e. scene_vis_w_ui  
	should be the only scene in SceneParams tag. This is due to alpha value set by code based on user preference for these SceneParams. If multiple scenes co-exist 
	with scene_vis_w_ui in same SceneParams, all of them will be affected by the user preference alpha value

	NOTE: it's OK to combine any scenes in non-TOP containers/views and in non main containers/views as user preference code affects only
	_main_ screen _top_ containers
	
	NOTE: styles are located in files named styles-[prefix].xml, where [prefix] is first word of the style, e.g. TopContainer style is in styles-top.xml,
	and NavbarShim style is in styles-navbar.xml  
-->

<!-- NOTE: keeping it on top for now so service start/connection starts before inflating anything else -->
<com.maxmpz.audioplayer.widget.PlayerConnectionBehavior/>

<!-- NOTE: this handles navigation between top scenes/pages -->
<com.maxmpz.audioplayer.widget.TopNavSceneFastLayout android:id="@+id/top_container"
	style="?TopContainer"
>
	<com.maxmpz.widget.player.MilkWidget android:id="@+id/milk"
		style="?TopMilk"
	/>


	<!-- list -->
	<com.maxmpz.audioplayer.list.ListWidget android:id="@+id/list"
		style="?TopListWidget"
	/>
 	<SceneParams w:scene="@+id/scene_lib" w:scene_2="@+id/scene_search" w:scene_3="@+id/scene_playing" w:scene_4="@id/scene_vis_temp_ui"
		android:visibility="visible"
		android:alpha="1"
	/>
	<SceneParams w:scene="@+id/scene_lyrics"
		android:visibility="visible"
		android:alpha="1"
		/>
	<!-- NOTE: alpha is overridden by user preference -->
	<SceneParams w:scene="@+id/scene_vis_w_ui" 
		android:visibility="visible"
		android:alpha=".25"
	/>
	<SceneParams w:scene="@+id/scene_eq" w:scene_2="@+id/scene_vis"
		android:visibility="gone"
	/>
	<!-- list -->


	<!-- Invisible view which matches list AA layout.
		 Used to attach other views to it, as @id/list itself spans the whole screen.
		 Also defines visualization size for bars in non-full-screen mode (aa_bounds padding accounted for this as well).
		 
		 NOTE: InvisibleView may set its content size for wrap_content as minWidth + paddingLeft + paddingRight and minHeight + paddingTop + paddingBottom.
		 This enables InvisibleView to adjust its size based on multiple values instead of just single dimension
	-->
	<com.maxmpz.widget.player.AABounds android:id="@+id/aa_bounds"
		style="?TopAABounds"
	/>

	
	<!-- cc_button -->
	<com.maxmpz.audioplayer.widget.MediaRouteButton android:id="@+id/cc_button"
		style="?CcButton_MainUI"
		tools:ignore="MissingClass"
		/>
	<SceneParams w:scene="@+id/scene_playing"
		style="?CcButton_MainUI_scenes_playing"
	/>
	<SceneParams w:scene="@id/scene_vis_temp_ui"
		style="?CcButton_MainUI_scenes_vis_w_ui"
	/>
	<!-- NOTE: alpha is overridden by user preference -->
	<SceneParams w:scene="@id/scene_vis_w_ui"
		style="?CcButton_MainUI_scenes_vis_w_ui"
		android:alpha="0.25"
	/>
	<SceneParams w:scene="@+id/scene_eq" w:scene_2="@+id/scene_search" w:scene_3="@+id/scene_lib"
		w:scene_4="@+id/scene_lyrics"
		style="?CcButton_MainUI_scenes_invisible"
		/>
	<SceneParams w:scene="@+id/scene_vis"
		style="?CcButton_MainUI_scene_vis"
	/>
	<StateAnimParams w:stateAnim="@id/popup_menu_item"
		android:alpha="0"
		/>
	<!-- cc_button -->
		

	<!-- waveseek_layout -->
	<!-- NOTE: layout for a waveseek is needed so the waveseek can be centered vertically between sub aa buttons and nav bar + have max height -->
	<com.maxmpz.widget.base.FastLayout android:id="@+id/waveseek_layout"
		style="?TopWaveseekLayout"
	>
	 	<com.maxmpz.widget.player.Waveseek android:id="@+id/waveseek"
			style="?TopWaveseek"
		    android:contentDescription="@string/track_progress_scroller"
		>
			<com.maxmpz.widget.base.NonOverlappingView android:id="@id/waveseek_cursor"
				style="?TopWaveseekCursor"
			/>
			<StateAnimParams w:stateAnim="@+id/anim_waveseek_pressed" w:stateAnim_2="@id/anim_seeking"
				style="?TopWaveseekCursor_state_waveseek_pressed"
			/>
		</com.maxmpz.widget.player.Waveseek>
		
		<!-- An invisible "button" behind play/pause. Used to capture presses for (probably) visually small play/pause buttons -->
		<com.maxmpz.widget.base.BusActionButton android:id="@+id/play_pause_behind"
			style="?TopPlayPauseBehind"
			w:busId="@id/bus_player_cmd"
			w:msgId="@id/cmd_player_toggle_playing"
			w:string="id/play_pause_behind"
			w:longPressMsgId="@id/cmd_player_stop_playing"
			android:importantForAccessibility="no"
		/>

		<!-- pause -->
		<com.maxmpz.widget.base.BusActionButton android:id="@+id/pause"
			style="?TopPause"
			w:busId="@id/bus_player_cmd"
			w:msgId="@id/cmd_player_toggle_playing"
			w:string="id/pause"
			w:longPressMsgId="@id/cmd_player_stop_playing"
			android:contentDescription="@string/pause"
		/>
		<SceneParams w:scene="@+id/scene_playing" w:scene_2="@+id/scene_vis_w_ui" w:scene_3="@+id/scene_vis" w:scene_4="@id/scene_vis_temp_ui"
			style="?TopPause_scene_playing"
		/>
		<SceneParams w:scene="@+id/scene_lyrics"
			w:baseScene="defaultScene"
			/>
		<StateAnimParams w:stateAnim="@id/anim_seeking"
			style="?TopPause_state_seeking"
		/>
		<!-- pause -->


		<!-- play -->
		<com.maxmpz.widget.base.BusActionButton android:id="@+id/play"
			style="?TopPlay"
			w:busId="@id/bus_player_cmd"
			w:msgId="@id/cmd_player_toggle_playing"
			w:string="id/play"
			w:longPressMsgId="@id/cmd_player_stop_playing"
			android:contentDescription="@string/play"
		/>
		<SceneParams w:scene="@+id/scene_playing" w:scene_2="@+id/scene_vis_w_ui" w:scene_3="@+id/scene_vis" w:scene_4="@id/scene_vis_temp_ui"
			style="?TopPlay_scene_playing"
		/>
		<SceneParams w:scene="@+id/scene_lyrics"
			w:baseScene="defaultScene"
			/>
		<StateAnimParams w:stateAnim="@id/anim_seeking"
			style="?TopPlay_state_seeking"
		/>
		<!-- play -->

		<!-- See @layout/merge_topwaveseeklayout_extralayout -->
		<include android:layout="?TopWaveseekLayout_extraLayout" w:optional="true"/>

		<!-- track_elapsed -->
		<com.maxmpz.widget.player.Elapsed android:id="@+id/track_elapsed"
			style="?TopTrackElapsed"
			/>
		<SceneParams w:scene="@+id/scene_playing" w:scene_2="@id/scene_vis_temp_ui" w:scene_3="@id/scene_vis_w_ui"
			style="?TopTrackElapsed_scene_playing"
			/>
		<SceneParams w:scene="@+id/scene_lyrics"
			w:baseScene="defaultScene"
			/>
		<!-- Empty SceneParams required for view to be touched during these scenes - important for changes happening
		     to the text while in transition -->
		<SceneParams w:scene="@+id/scene_eq" w:scene_2="@+id/scene_search" w:scene_3="@+id/scene_vis" w:scene_4="@+id/scene_lib"
			/>
		<StateAnimParams w:stateAnim="@id/anim_seeking"
			style="?TopTrackElapsed_state_seeking"
			/>
		<!-- track_elapsed -->


		<!-- track_duration -->
		<com.maxmpz.widget.player.Duration android:id="@+id/track_duration"
			style="?TopTrackDuration"
			android:importantForAccessibility="yes"
			/>
		<SceneParams w:scene="@+id/scene_playing" w:scene_2="@id/scene_vis_temp_ui" w:scene_3="@id/scene_vis_w_ui"
			style="?TopTrackDuration_scene_playing"
			/>
		<SceneParams w:scene="@+id/scene_lyrics"
			w:baseScene="defaultScene"
			/>
		<!-- Empty SceneParams required for view to be touched during these scenes - important for changes happening
		     to the text while in transition -->
		<SceneParams w:scene="@+id/scene_eq" w:scene_2="@+id/scene_search" w:scene_3="@+id/scene_vis" w:scene_4="@+id/scene_lib"
			/>
		<StateAnimParams w:stateAnim="@id/anim_seeking"
			style="?TopTrackDuration_state_seeking"
		/>
		<!-- track_duration -->


	</com.maxmpz.widget.base.FastLayout>
	<!-- waveseek_layout -->
	<SceneParams w:scene="@+id/scene_lyrics"
		w:baseScene="defaultScene"
		/>
	<SceneParams w:scene="@+id/scene_lib"
		style="?TopWaveseekLayout_scene_lib"
	/>
	<SceneParams w:scene="@+id/scene_playing" w:scene_2="@id/scene_vis_temp_ui"
		style="?TopWaveseekLayout_scenes_playing"
	/>
	<!-- NOTE: alpha is overridden by user preference -->
	<SceneParams w:scene="@id/scene_vis_w_ui"
		style="?TopWaveseekLayout_scenes_playing"
		android:alpha="0.25"
	/>
	<SceneParams w:scene="@+id/scene_eq" w:scene_2="@+id/scene_search" w:scene_3="@+id/scene_vis"
		style="?TopWaveseekLayout_scenes_invisible"
	/>
	<!-- waveseek_layout -->
	
	
	<!-- See @layout/merge_top_extralayout. Adds counter -->
	<include android:layout="?TopContainer_extraLayout" w:optional="true"/>


	<!-- @See @layout/meta_info_layout. Adds meta info. This is the default location for it, can be overridden by theme -->
	<include android:layout="?TopContainer_metaLayout" w:optional="true"/>


	<!-- list_scroller -->
	<!-- NOTE: extra padding left for extra touchable area. The padding is not visible -->
	<com.maxmpz.widget.list.ListScrollerView
		android:id="@+id/list_scroller"
		style="?TopListScrollerView"
		android:contentDescription="@string/pref_az_scroll"
	/>
	<SceneParams w:scene="@id/scene_lyrics"
		w:recalcChildren="dynamic"
		w:baseScene="defaultScene"
		/>
	<SceneParams w:scene="@+id/scene_lib" w:scene_2="@+id/scene_search" w:scene_3="@+id/scene_playing" w:scene_4="@id/scene_vis_temp_ui"
		android:visibility="visible"
		android:alpha="1"
	/>
	<!-- NOTE: alpha is overridden by user preference -->
	<SceneParams w:scene="@+id/scene_vis_w_ui"
		android:alpha="0.25"
		android:visibility="visible"
	/>
	<SceneParams w:scene="@+id/scene_eq" w:scene_2="@+id/scene_vis"
		android:visibility="gone"
	/>
	<StateAnimParams w:stateAnim="@+id/anim_scrollbar_pressed"
		style="?TopListScrollerView_state_scrollbar_pressed"
		/>
	<!-- list_scroller -->

	
	<!-- sub_aa_buttons -->
	<com.maxmpz.widget.base.SceneFastLayout android:id="@+id/sub_aa_buttons"
		style="?TopSubAAButtons"
		w:privateScene="true"
	>
		<com.maxmpz.widget.base.BusSelectablePopupButtonLayout android:id="@+id/vis_button_layout"
			style="?TopVisButtonLayout"

			w:stateBusId="@id/bus_gui"
			w:stateId="@id/state_gui_vis_mode"
			w:msgId="@id/msg_gui_vis_mode_changed"
			w:arg2="1"

			w:buttonsLabels="@array/vis_modes"
			w:buttonsDrawables="@array/vis_icons_32dp"
			w:buttonsBusId="@id/bus_gui"
			w:buttonsMsgId="@id/cmd_gui_set_vis_mode"
			w:buttonsArg1="@array/vis_modes_enum"

			w:extraItem="@string/settings"
			w:extraItemIcon="?settings_32dp"
			w:extraItemBusId="@id/bus_app_cmd"
			w:extraItemMsgId="@id/cmd_app_open_settings"
			w:extraItemString="vis"

			android:contentDescription="@string/visualization"
		>
		</com.maxmpz.widget.base.BusSelectablePopupButtonLayout>
		<SceneParams w:scene="@+id/scene_button_menu" 
			style="?ItemPopupMenu_scene_item_menu" 
		/>
		
		<com.maxmpz.widget.player.SleepTimerPopupLayout android:id="@+id/sleep_timer_layout"
			style="?TopSleepTimerButtonLayout"
			w:menuItemsLayout="@layout/merge_sleep_timer_popup_layout"
			android:importantForAccessibility="no"
		>
			<com.maxmpz.widget.base.PopupButton android:id="@+id/sleep_timer_button"
				style="?TopSleepTimerButton"
				android:contentDescription="@string/sleep_timer"
			/>
			<SceneParams w:scene="@+id/scene_button_menu"
				style="?SleepTimerButton_scene_button_menu"
			/>
			<SceneParams w:scene="@+id/scene_button_menu_closed"
				style="?TopSleepTimerButton"
			/>
		</com.maxmpz.widget.player.SleepTimerPopupLayout>
		<SceneParams w:scene="@+id/scene_button_menu" 
			style="?TopSleepTimerButtonLayout_scene_item_menu" 
		/>
		
		<!-- NOTE: arg2="1" means we override arg2 when sending message by chaning modes by pressing BusSelectablePopupButtonLayout.
			       This only applied (and overrides possible button arg2) ONLY when BusSelectablePopupButtonLayout is pressed,
			       otherwise, while in popup menu buttons send their (or buttons* based) messages/args
			 NOTE: we use PopupButtonNoTint as PopupButton by default for the shuffle/repeat layouts, as all our shuffle/repeat
			       icons are already tinted -->
		<com.maxmpz.widget.base.BusSelectablePopupButtonLayout android:id="@+id/shuffle_button_layout"
			style="?TopShuffleButtonLayout"

			w:stateBusId="@id/bus_player"
			w:stateId="@id/state_player_shuffle_mode"
			w:msgId="@id/msg_player_shuffle_mode_changed"
			w:arg2="1"

			w:buttonsLabels="@array/shuffle_modes"
			w:buttonsDrawables="@array/shuffle_icons_32dp"
			w:buttonsBusId="@id/bus_player_cmd"
			w:buttonsMsgId="@id/cmd_player_set_shuffle_mode"
			w:buttonsArg1="@array/shuffle_modes_enum"
			android:contentDescription="@string/shuffle"

			w:extraItem="@string/settings"
			w:extraItemIcon="?settings_32dp"
			w:extraItemBusId="@id/bus_app_cmd"
			w:extraItemMsgId="@id/cmd_app_open_settings"
			w:extraItemString="library_shuffle"

		/>
		<SceneParams w:scene="@+id/scene_button_menu" 
			style="?ItemPopupMenu_scene_item_menu" 
		/>
		
		<com.maxmpz.widget.base.BusSelectablePopupButtonLayout android:id="@+id/repeat_button_layout"
			style="?TopRepeatButtonLayout"

			w:stateBusId="@id/bus_player"
			w:stateId="@id/state_player_repeat_mode"
			w:msgId="@id/msg_player_repeat_mode_changed"
			w:arg2="1"

			w:buttonsLabels="@array/repeat_modes"
			w:buttonsDrawables="@array/repeat_icons_32dp"
			w:buttonsBusId="@id/bus_player_cmd"
			w:buttonsMsgId="@id/cmd_player_set_repeat_mode"
			w:buttonsArg1="@array/repeat_modes_enum"
			android:contentDescription="@string/repeat"
		/>
		<SceneParams w:scene="@+id/scene_button_menu" 
			style="?ItemPopupMenu_scene_item_menu" 
		/>
	</com.maxmpz.widget.base.SceneFastLayout>
	<!-- sub_aa_buttons -->
	<SceneParams w:scene="@id/scene_lyrics"
		w:baseScene="defaultScene"
		/>
	<SceneParams w:scene="@+id/scene_playing"
		style="?TopSubAAButtons_scenes_playing"
	/>
	<SceneParams w:scene="@id/scene_vis_temp_ui"
		style="?TopSubAAButtons_scenes_playing"
	/>
	<!-- NOTE: alpha is overridden by user preference -->
	<SceneParams w:scene="@+id/scene_vis_w_ui"
		style="?TopSubAAButtons_scenes_playing"
		android:alpha="0.25"
	/>
	<!-- Needed to be invisible so waveseek properly attaches to it -->
	<SceneParams w:scene="@+id/scene_lib" 
		style="?TopSubAAButtons_scene_lib"
	/>
	<SceneParams w:scene="@+id/scene_eq" w:scene_2="@+id/scene_search" w:scene_3="@+id/scene_vis"
		style="?TopSubAAButtons_scenes_hidden"
	/>
	<!-- sub_aa_buttons -->

	
	<!-- eq -->
	<com.maxmpz.widget.base.LoadableBehavior style="@style/behavior_eq_layout"/>

	<!-- search -->
	<com.maxmpz.widget.base.LoadableBehavior style="@style/behavior_search_layout"/>

	<!-- NOTE: invisible anchor view which matches Navbar dimensions. Navbar itself is in the independent scene/layout container,
		 so we need some anchor view in this top container for other views to be aware of the navbar size
		 
		 NOTE: InvisibleView may set its content size for wrap_content as minWidth + paddingLeft + paddingRight
		 and minHeight + paddingTop + paddingBottom.
		 This enables InvisibleView to adjust its size based on multiple values instead of just single dimension

		 NOTE: navbar shadow may be cut off on some devices if placed below navbar - looks like bug for
		 some (actually quite many) hwui/driver implementations,
		 thus it's View and it's visibility == VISIBLE (Note5, S6@7.0, S5@6.0). 
		 There also other rendering artifacts possible due to no any visible view below navbar + gl surface reproducible up to Pie,
		 e.g. background shim may fail to render below navbar, etc.
		 
		 NOTE: this also captures clicks/touches/gestures through the paddings around navbar, so it's clickable 
	-->

	<com.maxmpz.widget.base.InvisibleView android:id="@+id/navbar_bounds"
		style="?TopNavbarBounds"
	/>
	
	<include android:layout="@layout/merge_navbar"/>
	
	<!-- NOTE: loaded once and never unloaded. NOTE: TopNavHelper assumes vis panel is loaded via behavior, otherwise change vis_panel_faded_alpha logic there -->
	<com.maxmpz.widget.base.LoadableBehavior style="@style/vis_panel_loadable_beahvior"/>
	
	<!-- Putting indexer popup view above possible selection menus but below navbar (so we hiding it with our shade) -->
	<com.maxmpz.widget.list.ListIndexerPopupView
		android:id="@+id/list_indexer"
		style="?TopListIndexerPopupView"
	/>
	<StateAnimParams w:stateAnim="@+id/anim_scrollbar_pressed"
		style="?TopListIndexerPopupView_state_scrollbar_pressed"
	/>
	
	<!-- NOTE: this is the view where popup item view is moved and transitioned to popup menu and back -->
	<com.maxmpz.widget.base.MenuPlaceholderLayout android:id="@+id/menu_placeholder"
		style="?TopMenuPlaceholderLayout"
		w:privateScene="true"
	/>
	
	<!-- NOTE: for now, need selection menu over menu placeholder, as we use selection menu for popup lists -->
	<include android:layout="@layout/merge_selection_menu"/>

	<!-- NOTE: this is the secondary popup area, used for selection menu popup -->
	<com.maxmpz.widget.base.MenuPlaceholderLayout android:id="@+id/menu_placeholder2"
		style="?TopMenuPlaceholderLayout"
		w:privateScene="true"
		/>

	<include android:layout="@layout/merge_upper_toast"/>
	<!-- This is for toast_container -->
	<SceneParams w:scene="@id/scene_vis_temp_ui" w:scene_2="@id/scene_vis"
		w:baseScene="defaultScene"
		/>
	<!-- Alpha is overridden for this scene -->
	<SceneParams w:scene="@id/scene_vis_w_ui"
		w:baseScene="defaultScene"
		/>


	<include android:layout="@layout/merge_toast"/>

	<!-- This is for toast_container -->
	<SceneParams w:scene="@id/scene_playing" w:scene_2="@id/scene_vis_temp_ui" w:scene_3="@id/scene_vis"
		w:baseScene="defaultScene"
	/>
	<!-- Alpha is overridden for this scene -->
	<SceneParams w:scene="@id/scene_vis_w_ui"
		w:baseScene="defaultScene"
	/>
	<SceneParams w:scene="@id/scene_lib" w:scene_2="@id/scene_search" w:scene_3="@id/scene_eq"
		style="?TopToastContainer_scenes_non_main"
	/>
			
	
	
	<!-- NOTE: status bar bg should be atop of everything, so putting it here as last, thus higher z-index. Helps with e.g. header => popup menu poping over status bar bg.
		 By default, status_bar_bg/navigation_bar_bg don't change anything for scenes, but SceneParams are provided for skins, which can change them
		 NOTE: automatically hidden if user hides status bar via settings
	 -->

	<com.maxmpz.widget.base.FitsStatusBarView android:id="@+id/status_bar_bg"
		style="?TopFitsStatusBarView"
	/>
	<!-- All main screen scenes match default scene, thus, not transitions for these scenes -->
	<SceneParams w:scene="@id/scene_playing" w:scene_2="@id/scene_vis_temp_ui"
		w:baseScene="defaultScene"
	/>
	<!-- The separate sceneParams for scene_vis (full screen) as we may want to modify it to hide status bar completely.
	     This logic is handled by FitsStatusBarView -->
	<SceneParams w:scene="@id/scene_vis"
		w:baseScene="defaultScene"
		/>
	<!-- Alpha is overridden for this scene -->
	<SceneParams w:scene="@id/scene_vis_w_ui"
		w:baseScene="defaultScene"
	/>
	<!-- All non main screen scenes have single style --> 
	<SceneParams w:scene="@id/scene_lib" w:scene_2="@id/scene_search" w:scene_3="@id/scene_eq"
		style="?TopFitsStatusBarView_scenes_non_main"
	/>
	
	<com.maxmpz.widget.base.FitsNavigationBarView android:id="@+id/navigation_bar_bg"
		style="?TopFitsNavigationBarView"
	/>
	<!-- NOTE: all main screen scenes match default scene, thus, not transitions for these scenes -->
	<SceneParams w:scene="@id/scene_playing" w:scene_2="@id/scene_vis_temp_ui"
		w:baseScene="defaultScene"
		w:applyViewParams="true"
	/>
	<!-- The separate sceneParams for scene_vis (full screen) as we may want to modify it to hide status bar completely.
	     This logic is handled by FitsStatusBarView -->
	<SceneParams w:scene="@id/scene_vis"
		w:baseScene="defaultScene"
		w:applyViewParams="true"
		/>
	<!-- Alpha is overridden for this scene -->
	<SceneParams w:scene="@id/scene_vis_w_ui"
		w:baseScene="defaultScene"
	/>
	<!-- All non main screen scenes have single style -->
	<SceneParams w:scene="@id/scene_lib" w:scene_2="@id/scene_search" w:scene_3="@id/scene_eq"
		style="?TopFitsNavigationBarView_scenes_non_main"
	/>
		
	<!--<include android:layout="@layout/_debug_all_mu_colors"/>-->


</com.maxmpz.audioplayer.widget.TopNavSceneFastLayout><!-- top_container -->
		

</merge>		
